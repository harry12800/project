<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.harry12800.scan.doc.mapper.DirectoryMapper">
	<select id='findById' resultMap='Directory' parameterType='java.lang.Long'>
		select
		id,parent_id,app_id,name,create_time,update_time,create_user,update_user,remark,owner,sort
		from docs.directory where id = #{id}
	</select>
	<select id='findByAppId' resultMap='Directory' parameterType='java.lang.Long'>
		select
		id,parent_id,app_id,name,create_time,update_time,create_user,update_user,remark,owner,sort
		from docs.directory where app_id = #{appId}
	</select>
	<select id='findByAppIdAndUserId' resultMap='Directory'>
		select
		id,parent_id,app_id,name,create_time,update_time,create_user,update_user,remark,owner,sort
		from docs.directory where app_id = #{appId} and owner = #{userId}
	</select>
	
	<select id='findAll' resultMap='Directory'>
		select
		id,parent_id,app_id,name,create_time,update_time,create_user,update_user,remark,owner,sort
		from directory
	</select>
	<insert id='save' parameterType='cn.harry12800.scan.doc.entity.Directory'>
		insert into docs.directory(
		id, parent_id, app_id, name, create_time, update_time, create_user,
		update_user, remark,owner,sort)
		values(#{id},
		#{parentId},
		#{appId},
		#{name},
		#{createTime},
		#{updateTime},
		#{createUser},
		#{updateUser},
		#{remark},
		#{owner},
		#{sort}
		)
	</insert>
	<update id='update' parameterType='cn.harry12800.scan.doc.entity.Directory'>
		update docs.directory set
		parent_id=#{parentId},
		app_id=#{appId},
		name=#{name},
		<!--create_time=#{createTime}, -->
		update_time=#{updateTime},
		<!-- create_user=#{createUser}, -->
		update_user=#{updateUser},

		remark=#{remark}
		where id=#{id}
	</update>
	<update id='updateName'>
		update docs.directory set
		name=#{name},
		where id=#{id}
	</update>
	
	<delete id='deleteById' parameterType='java.lang.Long'>
		delete from docs.directory
		where id = #{value}
	</delete>
	<delete id='deleteByIds' parameterType='java.util.Set'>
		delete from docs.directory
		where  id in <foreach item='id' collection='ids' open='(' separator=',' close=')'>
		#{id}
		</foreach>
	</delete>
	<resultMap type='cn.harry12800.scan.doc.entity.Directory' id='Directory'>
		<result property='id' column='id' />
		<result property='parentId' column='parent_id' />
		<result property='appId' column='app_id' />
		<result property='name' column='name' />
		<result property='createTime' column='create_time' />
		<result property='updateTime' column='update_time' />
		<result property='createUser' column='create_user' />
		<result property='updateUser' column='update_user' />
		<result property='remark' column='remark' />
		<result property='owner' column='owner' />
		<result property='sort' column='sort' />
	</resultMap>
</mapper>
	