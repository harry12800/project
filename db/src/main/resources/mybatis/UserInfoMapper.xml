<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.harry12800.db.mapper.UserInfoMapper">
	<select id='findById' resultMap='UserInfo' parameterType='java.lang.Long'>
		select
		id,user_id,nick_name,real_name,employee_no,avatar_url,password,salt,create_time,phone,mail,sex
		from docs.user_info where id = #{id}
	</select>
	<select id='findByUserId' resultMap='UserInfo' parameterType='java.lang.String'>
		select
		id,user_id,nick_name,real_name,employee_no,avatar_url,password,salt,create_time,phone,mail,sex
		from docs.user_info where user_id = #{userId}
	</select>
	<select id='findAll' resultMap='UserInfo'>
		select id, user_id,
		nick_name, real_name, employee_no, avatar_url, password,salt,phone,mail,sex,create_time from docs.user_info
	</select>
	<select id='getAllUserExcept' resultMap='UserInfo'>
		select id, user_id,
		nick_name, real_name, employee_no, avatar_url, password,salt,phone,mail,sex,create_time from docs.user_info where id != #{id}
	</select>
	
	<select id='getResourceUserByResourceId' resultMap='UserInfo' parameterType='java.lang.Long'>
		select id, user_id,
		nick_name, real_name, employee_no, avatar_url,password,salt,
		create_time,phone,mail,sex from docs.user_info where user_id in (select user_id from docs.user_resource where resource_id=#{resourceId})
	</select>
	<insert id='save' parameterType='cn.harry12800.db.entity.UserInfo'>
		insert into docs.user_info(
		id, user_id, nick_name, real_name, employee_no, avatar_url,password,salt,
		create_time,phone,mail,sex)
		values(#{id},
		#{userId},
		#{nickName},
		#{realName},
		#{employeeNo},
		#{avatarUrl},
		#{password},
		#{salt},
		#{createTime},
		#{phone},
		#{mail},
		#{sex}
		)
	</insert>
	<update id='update' parameterType='cn.harry12800.db.entity.UserInfo'>
		update docs.user_info set
		user_id=#{userId},
		nick_name=#{nickName},
		real_name=#{realName},
		employee_no=#{employeeNo},
		avatar_url=#{avatarUrl},
		salt=#{salt},
		password=#{password},
		phone=#{phone},
		sex=#{sex},
		mail=#{mail}
		<!-- create_time=#{createTime} -->
		where id=#{id}
	</update>
	<delete id='deleteById' parameterType='java.lang.String'>
		delete from docs.user_info where id
		= #{value}
	</delete>
	<delete id='deleteByIds' parameterType='java.util.Set'>
		delete from docs.user_info where
		id in <foreach item='id' collection='ids' open='(' separator=',' close=')'>
		#{id}
		</foreach>
	</delete>
	<resultMap type='cn.harry12800.db.entity.UserInfo' id='UserInfo'>
		<result property='id' column='id' />
		<result property='userId' column='user_id' />
		<result property='nickName' column='nick_name' />
		<result property='realName' column='real_name' />
		<result property='employeeNo' column='employee_no' />
		<result property='avatarUrl' column='avatar_url' />
		<result property='password' column='password' />
		<result property='salt' column='salt' />
		<result property='createTime' column='create_time' />
		<result property='phone' column='phone' />
		<result property='sex' column='sex' />
		<result property='mail' column='mail' />
	</resultMap>
</mapper>
	