<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.harry12800.db.mapper.UserInfoMapper">
	<sql id="Base_Column_List">
		 id, 
			user_id,nick_name,real_name,employee_no,avatar_url,salt,password,create_time,phone,mail,sex 
	</sql>
	<select id='findById' resultMap='UserInfo'  parameterType='java.lang.Long'>
		select 
			<include refid="Base_Column_List" />
			 from docs.user_info 
			 where id = #{value}
	</select>
	
	<select id='findByParam' resultMap='UserInfo' >
		select 
			<include refid="Base_Column_List" />
			 from docs.user_info 
			 where ${propName} = #{value}
	</select>
	
	<select id='findAll' resultMap='UserInfo' >
		select
			<include refid="Base_Column_List" />
			 from docs.user_info
	</select>
	<select id='findByIds' parameterType='java.util.Set'>
		select
			<include refid="Base_Column_List" />
			 from docs.user_info where  
		<choose>
			<when test='set !=null and set.size()>0'>
				 id  in 
				<foreach item = 'id' index='index' collection='set' open='(' separator=',' close=')'>
					#{id}
				</foreach>
			</when>
			<otherwise>
			 0 = 1
			</otherwise>
		</choose>
	</select>
	<insert id='save' parameterType='cn.harry12800.db.entity.UserInfo'>
		insert into docs.user_info(
		 user_id,  nick_name,  real_name,  employee_no,  avatar_url,  salt,  password,  create_time,  phone,  mail,   sex)
		values(#{userId},
		#{nickName},
		#{realName},
		#{employeeNo},
		#{avatarUrl},
		#{salt},
		#{password},
		#{createTime},
		#{phone},
		#{mail},
		#{sex}
		)
	</insert>
	<update id='update' parameterType='cn.harry12800.db.entity.UserInfo'>
		update docs.user_info set
		 user_id=#{userId},
		 		 nick_name=#{nickName},
		 		 real_name=#{realName},
		 		 employee_no=#{employeeNo},
		 		 avatar_url=#{avatarUrl},
		 		 salt=#{salt},
		 		 password=#{password},
		 		 create_time=#{createTime},
		 		 phone=#{phone},
		 		 mail=#{mail},
		 		 
		 sex=#{sex}
		 where id=#{id}
	</update>
	<delete id='deleteById' parameterType='java.lang.Long'>
		delete from docs.user_info where  id = #{value}
	</delete>
	<!-- #{value} -->
	<delete id='deleteByIds' parameterType='java.util.Set'>
		delete from docs.user_info where  
		<choose>
			<when test='set !=null and set.size()>0'>
				 id  in 
				<foreach item = 'id' index='index' collection='set' open='(' separator=',' close=')'>
					#{id}
				</foreach>
			</when>
			<otherwise>
			 0 = 1
			</otherwise>
		</choose>
	</delete>
	
	
	<resultMap type='cn.harry12800.db.entity.UserInfo' id='UserInfo'>
			<result property='id' column='id'/>
			<result property='userId' column='user_id'/>
			<result property='nickName' column='nick_name'/>
			<result property='realName' column='real_name'/>
			<result property='employeeNo' column='employee_no'/>
			<result property='avatarUrl' column='avatar_url'/>
			<result property='salt' column='salt'/>
			<result property='password' column='password'/>
			<result property='createTime' column='create_time'/>
			<result property='phone' column='phone'/>
			<result property='mail' column='mail'/>
			<result property='sex' column='sex'/>
	</resultMap>
</mapper>
	