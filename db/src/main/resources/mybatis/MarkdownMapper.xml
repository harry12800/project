<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.harry12800.db.mapper.MarkdownMapper">
	<select id='findById' resultMap='Markdown' parameterType='java.lang.Long'>
		select
		id,name,content from docs.markdown where id = #{id}
	</select>
	<select id='findAll' resultMap='Markdown'>
		select id, name,
		content from docs.markdown
	</select>
	<select id='findByIds' resultMap='Markdown' parameterType='java.lang.String'>
		select id, name,
		content from docs.markdown where  ${markdownIds}
	</select>
	<insert id='save' parameterType='cn.harry12800.db.entity.Markdown'>
		insert into docs.markdown(
		id, name, content)
		values(#{id},
		#{name},
		#{content}
		)
	</insert>
	<update id='update' parameterType='cn.harry12800.db.entity.Markdown'>
		update docs.markdown set
		name=#{name},
		content=#{content}
		where id=#{id}
	</update>
	<delete id='deleteById' parameterType='java.lang.Long'>
		delete from docs.markdown where
		id = #{value}
	</delete>
	<delete id='deleteByIds' parameterType='java.util.Set'>
		delete from docs.markdown
		where  id in <foreach item='id' collection='ids' open='(' separator=',' close=')'>
		#{id}
		</foreach>
	</delete>
	<select id="search" parameterType="java.lang.String" resultMap='Markdown'>
		select * from docs.markdown 
		where content like ${content}
	</select>
	<resultMap type='cn.harry12800.db.entity.Markdown' id='Markdown'>
		<result property='id' column='id' />
		<result property='name' column='name' />
		<result property='content' column='content' />
	</resultMap>
</mapper>
	